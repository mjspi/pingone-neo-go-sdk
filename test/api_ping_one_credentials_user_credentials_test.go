/*
PingOne Platform API - Credentials

Testing PingOneCredentialsUserCredentialsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_PingOneCredentialsUserCredentialsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PingOneCredentialsUserCredentialsApiService CreateAUserCredential", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var envID string
		var userID string

		httpRes, err := apiClient.PingOneCredentialsUserCredentialsApi.CreateAUserCredential(context.Background(), envID, userID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PingOneCredentialsUserCredentialsApiService ReadAllUserCredentials", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var envID string
		var userID string

		httpRes, err := apiClient.PingOneCredentialsUserCredentialsApi.ReadAllUserCredentials(context.Background(), envID, userID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PingOneCredentialsUserCredentialsApiService ReadOneUserCredential", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var envID string
		var userID string
		var credentialID string

		httpRes, err := apiClient.PingOneCredentialsUserCredentialsApi.ReadOneUserCredential(context.Background(), envID, userID, credentialID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PingOneCredentialsUserCredentialsApiService ReadOneUserCredentialWallets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var envID string
		var userID string
		var credentialID string

		httpRes, err := apiClient.PingOneCredentialsUserCredentialsApi.ReadOneUserCredentialWallets(context.Background(), envID, userID, credentialID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PingOneCredentialsUserCredentialsApiService UpdateAUserCredential", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var envID string
		var userID string
		var credentialID string

		httpRes, err := apiClient.PingOneCredentialsUserCredentialsApi.UpdateAUserCredential(context.Background(), envID, userID, credentialID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
